from enum import Enum


class TerminalEnum(Enum):
    _class = 'class'
    _plus = 'plus'
    _void = 'void'
    _var = 'var'
    _minus = 'minus'
    _or = 'or'
    _id = 'id'
    _mult = 'mult'
    _div = 'div'
    _colon = 'colon'
    _semi = 'semi'
    _comma = 'comma'
    _rpar = 'rpar'
    _lpar = 'lpar'
    _rcurbr = 'rcurbr'
    _lcurbr = 'lcurbr'
    _rsqbr = 'rsqbr'
    _lsqbr = 'lsqbr'
    _integer = 'integer'
    _float = 'float'
    _string = 'string'
    _private = 'private'
    _not = 'not'
    _intnum = 'intnum'
    _floatnum = 'floatnum'
    _stringlit = 'stringlit'
    _lt = 'lt'
    _gt = 'gt'
    _eq = 'eq'
    _neq = 'neq'
    _leq = 'leq'
    _geq = 'geq'
    _assign = 'assign'
    _func = 'func'
    _main = 'main'
    _inherits = 'inherits'
    _while = 'while'
    _break = 'break'
    _write = 'write'


class NonTerminalEnum(Enum):
    _AParams = 'AParams'
    _AParamsTail = 'AParamsTail'
    _AddOp = 'AddOp'
    _AddOp1 = 'AddOp1'
    _AddOp2 = 'AddOp2'
    _ArithExpr = 'ArithExpr'
    _ArithExprTail = 'ArithExprTail'
    _ArraySizeRept = 'ArraySizeRept'
    _AssignOp = 'AssignOp'
    _AssignStatTail = 'AssignStatTail'
    _ClassDecl = 'ClassDecl'
    _ClassDeclBody = 'ClassDeclBody'
    _ClassMethod = 'ClassMethod'
    _Expr = 'Expr'
    _ExprTail = 'ExprTail'
    _FParams = 'FParams'
    _FParamsTail = 'FParamsTail'
    _Factor = 'Factor'
    _Factor1 = 'Factor1'
    _Factor2 = 'Factor2'
    _Factor3 = 'Factor3'
    _Factor4 = 'Factor4'
    _Factor5 = 'Factor5'
    _Factor6 = 'Factor6'
    _Factor7 = 'Factor7'
    _FuncBody = 'FuncBody'
    _FuncDecl = 'FuncDecl'
    _FuncDeclTail = 'FuncDeclTail'
    _FuncDeclTail1 = 'FuncDeclTail1'
    _FuncDef = 'FuncDef'
    _FuncHead = 'FuncHead'
    _FuncOrAssignStat = 'FuncOrAssignStat'
    _FuncOrAssignStatIdnest = 'FuncOrAssignStatIdnest'
    _FuncOrAssignStatIdnest1 = 'FuncOrAssignStatIdnest1'
    _FuncOrAssignStatIdnestFuncTail = 'FuncOrAssignStatIdnestFuncTail'
    _FuncStatTail = 'FuncStatTail'
    _FuncStatTail1 = 'FuncStatTail1'
    _FuncStatTailIdnest = 'FuncStatTailIdnest'
    _FuncOrAssignStatIdnestVarTail = 'FuncOrAssignStatIdnestVarTail'
    _FuncOrAssignStatIdnestVarTail1 = 'FuncOrAssignStatIdnestVarTail1'
    _FuncOrVar = 'FuncOrVar'
    _FuncOrVarIdnest = 'FuncOrVarIdnest'
    _FuncOrVarIdnest2 = 'FuncOrVarIdnest2'
    _FuncOrVarIdnestTail = 'FuncOrVarIdnestTail'
    _Function = 'Function'
    _IndiceRep = 'IndiceRep'
    _Inherit = 'Inherit'
    _IntNum = 'IntNum'
    _MemberDecl = 'MemberDecl'
    _MemberDecl1 = 'MemberDecl1'
    _MethodBodyVar = 'MethodBodyVar'
    _MultOp = 'MultOp'
    _MultOp1 = 'MultOp1'
    _MultOp2 = 'MultOp2'
    _NestedId = 'NestedId'
    _Prog = 'Prog'
    _RelOp = 'RelOp'
    _RelOp1 = 'RelOp1'
    _RelOp2 = 'RelOp2'
    _RelOp3 = 'RelOp3'
    _RelOp4 = 'RelOp4'
    _RelOp5 = 'RelOp5'
    _START = 'START'
    _Sign = 'Sign'
    _Sign1 = 'Sign1'
    _StatBlock = 'StatBlock'
    _StatBlock1 = 'StatBlock1'
    _Statement = 'Statement'
    _Statement1 = 'Statement1'
    _Statement2 = 'Statement2'
    _Statement3 = 'Statement3'
    _Statement4 = 'Statement4'
    _Statement5 = 'Statement5'
    _Statement6 = 'Statement6'
    _Statement7 = 'Statement7'
    _StatementList = 'StatementList'
    _Term = 'Term'
    _TermTail = 'TermTail'
    _Type = 'Type'
    _Type1 = 'Type1'
    _Type2 = 'Type2'
    _Type3 = 'Type3'
    _VarDecl = 'VarDecl'
    _VarDeclRep = 'VarDeclRep'
    _Variable = 'Variable'
    _VariableIdnest = 'VariableIdnest'
    _VariableIdnestTail = 'VariableIdnestTail'
    _Visibility = 'Visibility'
    _Visibility1 = 'Visibility1'

terminal = {'class', 'plus', 'void', 'var', 'minus', 'or', 'id',
            'intnum', 'mult', 'div', 'colon', 'semi', 'comma',
            'rpar', 'lpar', 'rcurbr', 'lcurbr', 'rsqbr', 'lsqbr', 'integer',
            'float', 'string', 'private', 'not', 'intnum', 'floatnum', 'stringlit',
            'lt', 'gt', 'eq', 'neq', 'leq', 'geq', 'assign',
            'func', 'main', 'inherits', 'while', 'break', 'write'
            }

non_terminals = {'AParams', 'AParamsTail', 'AddOp', 'AddOp1', 'AddOp2', 'ArithExpr', 'ArithExprTail',
                 'ArithExprTail', 'ArraySizeRept', 'AssignOp', 'AssignStatTail', 'ClassDecl', 'ClassDeclBody',
                 'ClassMethod', 'Expr', 'ExprTail', 'FParams', 'FParamsTail', 'Factor', 'Factor1',
                 'Factor2', 'Factor3', 'Factor4', 'Factor5', 'Factor6', 'Factor7', 'FuncBody',
                 'FuncDecl', 'FuncDeclTail', 'FuncDeclTail1', 'FuncDef', 'FuncHead', 'FuncOrAssignStat', 'FuncOrAssignStatIdnest',
                 'FuncOrAssignStatIdnest1', 'FuncOrAssignStatIdnestFuncTail', 'FuncStatTail', 'FuncStatTail1', 'FuncStatTailIdnest', 'FuncOrAssignStatIdnestVarTail',
                 'FuncOrAssignStatIdnestVarTail1', 'FuncOrVar', 'FuncOrVarIdnest', 'FuncOrVarIdnest2', 'FuncOrVarIdnestTail', 'Function', 'IndiceRep',
                 'Inherit', 'IntNum', 'MemberDecl', 'MemberDecl1', 'MethodBodyVar', 'MultOp', 'MultOp1',
                 'MultOp2', 'NestedId', 'Prog', 'RelOp', 'RelOp1', 'RelOp2',
                 'RelOp3', 'RelOp4', 'RelOp5', 'START', 'Sign', 'Sign1',
                 'StatBlock', 'StatBlock1', 'Statement', 'Statement1', 'Statement2', 'Statement3',
                 'Statement4', 'Statement5', 'Statement6', 'Statement7', 'StatementList', 'Term',
                 'TermTail', 'Type', 'Type1', 'Type2', 'Type3', 'VarDecl',
                 'VarDeclRep', 'Variable', 'VariableIdnest', 'VariableIdnestTail', 'Visibility', 'Visibility1'
                 }